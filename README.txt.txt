31.07.2018 [10:00] В предыдущей итерации мы отладили коннект и собрались добавлять Энтити и новые соответствующий функционал в DAO. Но в и тоге выяснилось, что полей такое количество (около 100), что работать через обычное JDBC и вручную переписывать все 70-90 параметров это синтаксическое самоубийство. Поэтому было принято писать свою собственную ORM.

ЦЕЛИ ORM

1. Основной метод получает на входе класс для парсинга и SQL. 
2. Анализируя SQL и класс, сравнивая поля и конвертируя типы данных мой ORM создает готовый класс ParamList, который является списком параметров, который в свою очередь "кушает" ResoServerInteract. Он собственно ему (методу prepareStatementExecute или что-то там в этом роде) и нужен.
3. Позже было решено добавить парсинг и в обратную сторону, но на данный момент потребности, правда, в этом нет.


ЧТО СДЕЛАНО:

1. В одном из сервисных классов (WsCalcKogNew) пока сделан базовый метод парсинга (потом есть мысль все это вытащить в отдельный класс или может быть даже в отдельную либу).
2. Метод пока просто выкидывает StringBuffer, в который он закидывает пока просто результат парсинга SQL (заданный, кстати пока жестко в методе): имя поля -  тип. Все.